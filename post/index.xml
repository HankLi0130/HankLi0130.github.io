<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Hank Li</title><link>https://hankli0130.github.io/post/</link><description>Recent content in Posts on Hank Li</description><generator>Hugo</generator><language>en-ca</language><lastBuildDate>Thu, 07 Dec 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://hankli0130.github.io/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Pihole installation</title><link>https://hankli0130.github.io/post/2023/12/07/pihole_installation/</link><pubDate>Thu, 07 Dec 2023 00:00:00 +0000</pubDate><guid>https://hankli0130.github.io/post/2023/12/07/pihole_installation/</guid><description>Pi-hole The Pi-hole is a DNS sinkhole that protects your devices from unwanted content without installing any client-side software.
How to deploy Pi-hole using Docker? More detials on docker-pi-hole.
Preparation Ubuntu 22.04 (x86) Enable 53 and 80 ports Copy the scripts on the bottom and then save them to files to your machine. Install docker Let&amp;rsquo;s install docker first.
# update sudo apt update # move to the Pi-hole folder cd pihole # install docker via install_docker.</description></item><item><title>Listen VPN connection in Android</title><link>https://hankli0130.github.io/post/2023/10/20/listen_vpn_connection_android/</link><pubDate>Fri, 20 Oct 2023 00:00:00 +0000</pubDate><guid>https://hankli0130.github.io/post/2023/10/20/listen_vpn_connection_android/</guid><description>The reason I found that my VPN app has a bug that when disconnecting the VPN from settings (Network &amp;amp; internet -&amp;gt; VPN), my VpnService wouldn&amp;rsquo;t be killed.
Finally, I got the cause, it&amp;rsquo;s because the VpnService.onRevoke() was not called when the VPN was killed from settings.
So I was thinking, is there any way to listen VPN connection in Android?
Here is what I got: Listen VPN connection using ConnectivityManager Close the VPN connection when onLost was called.</description></item><item><title>First head Socks5</title><link>https://hankli0130.github.io/post/2023/06/28/first_head_socks5/</link><pubDate>Wed, 28 Jun 2023 00:00:00 +0000</pubDate><guid>https://hankli0130.github.io/post/2023/06/28/first_head_socks5/</guid><description>What is Socks protocol? SOCKS is an Internet protocol that exchanges network packets between a client and server through a proxy server.
What is Socks5 protocol? SOCKS5 optionally provides authentication so only authorized users may access a server. Practically, a SOCKS server proxies TCP connections to an arbitrary IP address, and provides a means for UDP packets to be forwarded.
How to use Socks5? Setup a Socks5 server I created an Ubuntu 22.</description></item><item><title>Single choice dialog with Jetpack Compose</title><link>https://hankli0130.github.io/post/2023/06/14/single_choice_dialog_with_jetpack_compose/</link><pubDate>Wed, 14 Jun 2023 00:00:00 +0000</pubDate><guid>https://hankli0130.github.io/post/2023/06/14/single_choice_dialog_with_jetpack_compose/</guid><description>Alertdialog Example A car selection with single choice dialog with Jetpack Compose
Go to my GitHub to see more detail.</description></item><item><title>UDP load balancing using NGINX</title><link>https://hankli0130.github.io/post/2023/06/05/nginx_udp_load_balancing/</link><pubDate>Mon, 05 Jun 2023 00:00:00 +0000</pubDate><guid>https://hankli0130.github.io/post/2023/06/05/nginx_udp_load_balancing/</guid><description>Setup NGINX as an UDP load balancer TCP and UDP Load Balancing
How to do it? Configuration - nginx.conf I used default nginx.conf and added stream block.
user www-data; worker_processes auto; pid /run/nginx.pid; include /etc/nginx/modules-enabled/*.conf; events { worker_connections 768; # multi_accept on; } stream { upstream leaf_servers { server leaf1.teontest.site:1443; # UDP port server 1 server leaf2.teontest.site:1443; # UDP port server 2 } server { listen 1443 udp; # listen UDP port proxy_pass leaf_servers; } } http { ## # Basic Settings ## sendfile on; tcp_nopush on; types_hash_max_size 2048; # server_tokens off; # server_names_hash_bucket_size 64; # server_name_in_redirect off; include /etc/nginx/mime.</description></item><item><title>Build your own website using Hugo</title><link>https://hankli0130.github.io/post/2020/08/25/build_your_own_website_using_hugo/</link><pubDate>Tue, 25 Aug 2020 17:25:39 +0800</pubDate><guid>https://hankli0130.github.io/post/2020/08/25/build_your_own_website_using_hugo/</guid><description>Why Hugo? As a developer, I need a website to recode the things I&amp;rsquo;ve done. I found out Hugo is perfect for blogs and it&amp;rsquo;s easy to use. I&amp;rsquo;m gonna share how to create your own website using Hugo and deploy it to GitHub.
Let&amp;rsquo;s get it started Step 1: Install Hugo I recommend Homebrew to install Hugo because it&amp;rsquo;s really easy if you&amp;rsquo;re using macOS.
Open your terminal and type:</description></item></channel></rss>